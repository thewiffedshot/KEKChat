@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "AdminPanel";
        settings.CallbackRouteValues = new
        {
            Controller = "Administration",
            Action = "AdminPanelPartial"
        };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Administration", Action = "AdminPanelPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Administration", Action = "AdminPanelPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Administration", Action = "AdminPanelPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = false;
        settings.CommandColumn.CustomButtons.Add(new GridViewCommandColumnCustomButton()
        {
            ID = "Edit",
            Text = "Редактирай",
            Visibility = GridViewCustomButtonVisibility.AllDataRows
               
        });

        settings.ClientSideEvents.CustomButtonClick = String.Format("function(s, e) {{ CustomButtonClick(s, e, '{0}'); }}", Url.Action("EditUser", "Administration"));

        settings.KeyFieldName = "ID";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 700;


        settings.Columns.Add("ID").EditFormSettings.Visible = DefaultBoolean.False;
        settings.Columns.Add("Username");
        MVCxGridViewColumn privilegedColumn = new MVCxGridViewColumn()
        {
            FieldName = "Privileged",
            ColumnType = MVCxGridViewColumnType.CheckBox
        };
        settings.Columns.Add(privilegedColumn);

        settings.Columns.Add("Currency");
        settings.Columns.Add("LastOnline").EditFormSettings.Visible = DefaultBoolean.False;


        // Unbound column password
        MVCxGridViewColumn passwordColumn = new MVCxGridViewColumn()
        {
            FieldName = "Password",
            UnboundType = DevExpress.Data.UnboundColumnType.Integer,
            Visible = false
        };
        passwordColumn.EditFormSettings.Visible = DefaultBoolean.True;
        passwordColumn.EditFormSettings.VisibleIndex = 99;
        passwordColumn.SetEditItemTemplateContent(c =>
        {
            Html.DevExpress().TextBox(settingsTextBox =>
            {
                settingsTextBox.Name = c.Column.FieldName;
            }).Bind(c.Text).Render();
        });
        passwordColumn.PropertiesEdit.NullDisplayText = " ";
        settings.Columns.Add(passwordColumn);

        //settings.CustomUnboundColumnData += (sender, e) =>
        //{
        //    if(e.Column.FieldName == "Password") {
        //        //Otherwise it shows "nbsp;"
        //        if(e.IsGetData) {
        //            e.Value = null;
        //        }
        //    }
        //};

    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()

